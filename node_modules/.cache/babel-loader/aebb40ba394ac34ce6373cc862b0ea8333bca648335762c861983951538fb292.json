{"ast":null,"code":"'use strict';\nimport axios from 'axios';\nimport { URLSearchParams } from 'iso-url';\nimport { stateVectorMapper } from '../mappers/StateVectorMapper';\nimport { flightMapper } from './../mappers/FlightMapper';\nconst axiosConfig = {\n  timeout: 5000,\n  headers: {\n    'User-Agent': 'OpenSkyApi-TS/1.0'\n  }\n};\nexport class OpenSkyApi {\n  static HOST = 'opensky-network.org';\n  static API_ROOT = `https://${this.HOST}/api`;\n  static STATES_URI = `${this.API_ROOT}/states/all`;\n  static MY_STATES_URI = `${this.API_ROOT}/states/own`;\n  static FLIGHTS_URI = `${OpenSkyApi.API_ROOT}/flights/all`;\n  static FLIGHTS_BY_AIRCRAFT_URI = `${OpenSkyApi.API_ROOT}/flights/aircraft`;\n  static FLIGHTS_BY_ARRIVAL_URI = `${OpenSkyApi.API_ROOT}/flights/arrival`;\n  static FLIGHTS_BY_DEPARTURE_URI = `${OpenSkyApi.API_ROOT}/flights/departure`;\n  _axios;\n  authenticated = false;\n  lastRequestTime = {\n    GET_STATES: null,\n    GET_MY_STATES: null,\n    GET_FLIGHTS: null\n  };\n  constructor(credentials) {\n    if (credentials?.username && credentials?.password) {\n      axiosConfig.auth = {\n        username: credentials?.username,\n        password: credentials?.password\n      };\n      this.authenticated = true;\n    }\n    this._axios = axios.create(axiosConfig);\n  }\n  getFlights(beginTime, endTime) {\n    const nvps = [];\n    nvps.push({\n      begin: String(beginTime)\n    });\n    nvps.push({\n      end: String(endTime)\n    });\n    return this.getOpenSkyFlights(OpenSkyApi.FLIGHTS_URI, nvps);\n  }\n  getFlightsByArrivalAirport(airport, beginTime, endTime) {\n    const nvps = [];\n    nvps.push({\n      airport\n    });\n    nvps.push({\n      begin: String(beginTime)\n    });\n    nvps.push({\n      end: String(endTime)\n    });\n    return this.getOpenSkyFlights(OpenSkyApi.FLIGHTS_BY_ARRIVAL_URI, nvps);\n  }\n  getFlightsByDepartureAirport(airport, beginTime, endTime) {\n    const nvps = [];\n    nvps.push({\n      airport\n    });\n    nvps.push({\n      begin: String(beginTime)\n    });\n    nvps.push({\n      end: String(endTime)\n    });\n    return this.getOpenSkyFlights(OpenSkyApi.FLIGHTS_BY_DEPARTURE_URI, nvps);\n  }\n  getFlightsByAircraft(icao24, beginTime, endTime) {\n    const nvps = [];\n    nvps.push({\n      icao24\n    });\n    nvps.push({\n      begin: String(beginTime)\n    });\n    nvps.push({\n      end: String(endTime)\n    });\n    return this.getOpenSkyFlights(OpenSkyApi.FLIGHTS_BY_AIRCRAFT_URI, nvps);\n  }\n  getStates(time, icao24, bbox) {\n    const nvps = [];\n    if (time) {\n      nvps.push({\n        time: String(time)\n      });\n    }\n    icao24?.forEach(i => {\n      nvps.push({\n        icao24: i\n      });\n    });\n    if (bbox) {\n      nvps.push({\n        lamin: String(bbox.minLatitude)\n      });\n      nvps.push({\n        lamax: String(bbox.maxLatitude)\n      });\n      nvps.push({\n        lomin: String(bbox.minLongitude)\n      });\n      nvps.push({\n        lomax: String(bbox.maxLongitude)\n      });\n    }\n    if (this.checkRateLimit('GET_STATES', 4900, 9900)) {\n      return this.getOpenSkyStates(OpenSkyApi.STATES_URI, nvps);\n    }\n    return null;\n  }\n  getMyStates(time, icao24, serials) {\n    if (!this.authenticated) {\n      throw new Error(\"Anonymous access of 'myStates' not allowed\");\n    }\n    const nvps = [];\n    if (time) {\n      nvps.push({\n        time: String(time)\n      });\n    }\n    icao24?.forEach(i => {\n      nvps.push({\n        icao24: i\n      });\n    });\n    serials?.forEach(s => {\n      nvps.push({\n        serials: String(s)\n      });\n    });\n    if (this.checkRateLimit('GET_MY_STATES', 900, 0)) {\n      return this.getOpenSkyStates(OpenSkyApi.MY_STATES_URI, nvps);\n    }\n    return null;\n  }\n  async getOpenSkyStates(url, nvps) {\n    const params = new URLSearchParams();\n    nvps.forEach(i => {\n      for (const [key, value] of Object.entries(i)) {\n        params.append(key, value);\n      }\n    });\n    const {\n      data\n    } = await this._axios.get(url, {\n      params\n    });\n    const states = data?.states?.map(state => stateVectorMapper(state)) || [];\n    return {\n      time: data.time,\n      states\n    };\n  }\n  async getOpenSkyFlights(url, nvps) {\n    const params = new URLSearchParams();\n    nvps.forEach(i => {\n      for (const [key, value] of Object.entries(i)) {\n        params.append(key, value);\n      }\n    });\n    const {\n      data\n    } = await this._axios.get(url, {\n      params,\n      validateStatus: status => status >= 200 && status < 300 || status === 404\n    });\n    if (Array.isArray(data)) {\n      return data.map(d => flightMapper(d));\n    }\n    return new Array();\n  }\n  checkRateLimit(type, timeDiffAuth, timeDiffNoAuth) {\n    const t = this.lastRequestTime[type];\n    const now = Date.now();\n    this.lastRequestTime[type] = now;\n    return t == null || this.authenticated && now - t > timeDiffAuth || !this.authenticated && now - t > timeDiffNoAuth;\n  }\n}\nexport { BoundingBox } from './BoundingBox';","map":{"version":3,"mappings":"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","names":["axios","URLSearchParams","stateVectorMapper","flightMapper","axiosConfig","timeout","headers","OpenSkyApi","HOST","API_ROOT","STATES_URI","MY_STATES_URI","FLIGHTS_URI","FLIGHTS_BY_AIRCRAFT_URI","FLIGHTS_BY_ARRIVAL_URI","FLIGHTS_BY_DEPARTURE_URI","_axios","authenticated","lastRequestTime","GET_STATES","GET_MY_STATES","GET_FLIGHTS","constructor","credentials","username","password","auth","create","getFlights","beginTime","endTime","nvps","push","begin","String","end","getOpenSkyFlights","getFlightsByArrivalAirport","airport","getFlightsByDepartureAirport","getFlightsByAircraft","icao24","getStates","time","bbox","forEach","i","lamin","minLatitude","lamax","maxLatitude","lomin","minLongitude","lomax","maxLongitude","checkRateLimit","getOpenSkyStates","getMyStates","serials","Error","s","url","params","key","value","Object","entries","append","data","get","states","map","state","validateStatus","status","Array","isArray","d","type","timeDiffAuth","timeDiffNoAuth","t","now","Date","BoundingBox"],"sources":["../../../src/lib/OpenSkyApi.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}